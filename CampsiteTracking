CREATE TABLE CAMPSITES(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(255) NOT NULL
);

CREATE TABLE RESERVATION(
ID INT NOT NULL PRIMARY KEY,
ID_CAMP INT NOT NULL,
START_DATE DATE,
END_DATE DATE,
VISITOR_NUMBER INT,
STATUS INT, // 0: Active; 1: Cancelled
CONSTRAINT FK_CAMP FOREIGN KEY (ID_CAMP) REFERENCES CAMPSITES(ID)
);


CREATE TABLE CAMPSITE_AVAILABLE(
ID INT PRIMARY KEY,
ID_CAMP INT,
AVAIL_DATE DATE,
STATUS INT // 0: Available; 1 : Not Available
);



// I did two different 
ALTER TABLE AVAIL_RESERVATION ADD CONSTRAINT FK_AVAIL_CAMP FOREIGN KEY (ID_CAMP) REFERENCES CAMPSITES(ID);

INSERT INTO CAMPSITES(ID,NAME) VALUES(1,"CAMPSITE 001");
INSERT INTO CAMPSITES(ID,NAME) VALUES(2,"CAMPSITE 002");
INSERT INTO CAMPSITES(ID,NAME) VALUES(3,"CAMPSITE 003");

INSERT INTO RESERVATION( ID_CAMP,START_DATE,END_DATE, VISITOR_NUMBER )VALUES(1,'2021-04-01','2021-04-05',3);
INSERT INTO RESERVATION( ID_CAMP,START_DATE,END_DATE, VISITOR_NUMBER )VALUES(1,'2021-04-06','2021-04-10',7);
INSERT INTO RESERVATION( ID_CAMP,START_DATE,END_DATE, VISITOR_NUMBER )VALUES(1,'2021-06-07','2021-06-09',5);
INSERT INTO RESERVATION( ID_CAMP,START_DATE,END_DATE, VISITOR_NUMBER )VALUES(2,'2021-04-03','2021-04-07',9);
INSERT INTO RESERVATION( ID_CAMP,START_DATE,END_DATE, VISITOR_NUMBER )VALUES(3,'2021-04-01','2021-04-04',5);

INSERT INTO CAMPSITE_AVAILABLE( ID_CAMP, AVAIL_DATE,STATUS)VALUES(1,'2021-01-01', 0);
// ...
INSERT INTO CAMPSITE_AVAILABLE( ID_CAMP, AVAIL_DATE,STATUS)VALUES(1,'2021-12-31', 0);


INSERT INTO CAMPSITE_AVAILABLE( ID_CAMP, AVAIL_DATE,STATUS)VALUES(2,'2021-01-01', 0);
// ...
INSERT INTO CAMPSITE_AVAILABLE( ID_CAMP, AVAIL_DATE,STATUS)VALUES(2,'2021-12-31', 0);


INSERT INTO CAMPSITE_AVAILABLE( ID_CAMP, AVAIL_DATE,STATUS)VALUES(3,'2021-01-01', 0);
// ...
INSERT INTO CAMPSITE_AVAILABLE( ID_CAMP, AVAIL_DATE,STATUS)VALUES(3,'2021-12-31', 0);



CREATE PROCEDURE ADD_RESERVATION(@V_ID_CAMP INT, @V_START_DATE DATE, @V_END_START DATE, @V_VISITORS INT)
AS
  //Assuming we have a procedure to check availabily
  BOOLEAN AVAIL=FALSE;
  
  AVAIL=CHECK_AVAIL(@V_ID_CAMP, @V_START_DATE , @V_END_START )
  
  IF( AVAIL) 
   BEGIN
     INSERT INTO RESERVATION( ID_CAMP,START_DATE,END_DATE, VISITOR_NUMBER,STATUS ) 
     VALUES( @V_ID_CAMP, @V_START_DATE, @V_END_START, @V_VISITORS, '0' );
   
     UPDATE CAMPSITE_AVAILABLE
     SET STATUS=1
     WHERE ID_CAMP=@V_ID_CAMP
     AND AVAIL_DATE>=@V_START_DATE
     AND AVAIL_DATE<=@V_END_START;
   END
  
END;

CREATE PROCEDURE USP_CANCEL_RESERVATION(@V_ID_CAMP INT, @V_START_DATE DATE, @V_END_START DATE)
AS
BEGIN
  UPDATE RESERVATION 
  SET STATUS=1
  WHERE ID_CAMP=@V_ID_CAMP
  AND START_DATE=@V_START_DATE
  AND END_DATE=@V_END_START;

  UPDATE CAMPSITE_AVAILABLE
  SET STATUS=0
  WHERE ID_CAMP=@V_ID_CAMP
  AND AVAIL_DATE>=@V_START_DATE
  AND AVAIL_DATE<=@V_END_START;
     
  
END;

CREATE VIEW AVAILABLE_CAMPSITE_DATES
AS
  SELECT a.ID_CAMP,c.NAME, a.AVAIL_DATE
  FROM CAMPSITE_AVAILABLE a
  JOIN CAMPSITES c
  ON c.ID=a.ID_CAMP
  WHERE STATUS=0;
  
GO



// RETURN  VARCHAR 
CREATE FUNCTION UFN_POPULAR_DAYS
AS
RETURN VARCHAR

DECLARE @START_DATE DATE
DECLARE @END_DATE DATE
DECLARE @POPULAR_COUNT INT
DECLARE @POPULAR_DATE VARCHAR

 @START_DATE ='2021-01-01'
 @END_DATE ='2021-12-31'



WHILE (@START_DATE<=@END_DATE)
  BEGIN
  
  IF()
  BEGIN
  
  END
  
  
  
  
  @START_DATE=DATEADD(DAY,1,@START_DATE)
  
  END;


GO



